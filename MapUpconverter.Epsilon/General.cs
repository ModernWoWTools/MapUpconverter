// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: General.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Arbiter.Epsilon {

  /// <summary>Holder for reflection information generated from General.proto</summary>
  public static partial class GeneralReflection {

    #region Descriptor
    /// <summary>File descriptor for General.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneralReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1HZW5lcmFsLnByb3RvEg9BcmJpdGVyLkVwc2lsb24iuAEKF1JlcXVlc3RN",
            "YXBUaWxlT3BlcmF0aW9uEg0KBW1hcElEGAEgAigFEhEKCW1hcFRpbGVJRBgC",
            "IAMoBRIWCg5tYXBUaWxlT3BGbGFncxgDIAMoBSJjChVNYXBUaWxlT3BlcmF0",
            "aW9uRmxhZ3MSEgoOUkVMT0FEX1RFUlJBSU4QARISCg5SRUxPQURfVEVYVFVS",
            "RRACEhIKDlJFTE9BRF9PQkpFQ1RTEAQSDgoKUkVMT0FEX0xPRBAI"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Arbiter.Epsilon.RequestMapTileOperation), global::Arbiter.Epsilon.RequestMapTileOperation.Parser, new[]{ "MapID", "MapTileID", "MapTileOpFlags" }, null, new[]{ typeof(global::Arbiter.Epsilon.RequestMapTileOperation.Types.MapTileOperationFlags) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RequestMapTileOperation : pb::IMessage<RequestMapTileOperation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestMapTileOperation> _parser = new pb::MessageParser<RequestMapTileOperation>(() => new RequestMapTileOperation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestMapTileOperation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Arbiter.Epsilon.GeneralReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestMapTileOperation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestMapTileOperation(RequestMapTileOperation other) : this() {
      _hasBits0 = other._hasBits0;
      mapID_ = other.mapID_;
      mapTileID_ = other.mapTileID_.Clone();
      mapTileOpFlags_ = other.mapTileOpFlags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestMapTileOperation Clone() {
      return new RequestMapTileOperation(this);
    }

    /// <summary>Field number for the "mapID" field.</summary>
    public const int MapIDFieldNumber = 1;
    private readonly static int MapIDDefaultValue = 0;

    private int mapID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapID {
      get { if ((_hasBits0 & 1) != 0) { return mapID_; } else { return MapIDDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapID_ = value;
      }
    }
    /// <summary>Gets whether the "mapID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapID {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mapID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapID() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mapTileID" field.</summary>
    public const int MapTileIDFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_mapTileID_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> mapTileID_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MapTileID {
      get { return mapTileID_; }
    }

    /// <summary>Field number for the "mapTileOpFlags" field.</summary>
    public const int MapTileOpFlagsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_mapTileOpFlags_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> mapTileOpFlags_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Not directly of type MapTileOperationFlags as protobuf does not support bitfield/flags that way.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MapTileOpFlags {
      get { return mapTileOpFlags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestMapTileOperation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestMapTileOperation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapID != other.MapID) return false;
      if(!mapTileID_.Equals(other.mapTileID_)) return false;
      if(!mapTileOpFlags_.Equals(other.mapTileOpFlags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapID) hash ^= MapID.GetHashCode();
      hash ^= mapTileID_.GetHashCode();
      hash ^= mapTileOpFlags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapID) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      mapTileID_.WriteTo(output, _repeated_mapTileID_codec);
      mapTileOpFlags_.WriteTo(output, _repeated_mapTileOpFlags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapID) {
        output.WriteRawTag(8);
        output.WriteInt32(MapID);
      }
      mapTileID_.WriteTo(ref output, _repeated_mapTileID_codec);
      mapTileOpFlags_.WriteTo(ref output, _repeated_mapTileOpFlags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapID) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapID);
      }
      size += mapTileID_.CalculateSize(_repeated_mapTileID_codec);
      size += mapTileOpFlags_.CalculateSize(_repeated_mapTileOpFlags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestMapTileOperation other) {
      if (other == null) {
        return;
      }
      if (other.HasMapID) {
        MapID = other.MapID;
      }
      mapTileID_.Add(other.mapTileID_);
      mapTileOpFlags_.Add(other.mapTileOpFlags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            mapTileID_.AddEntriesFrom(input, _repeated_mapTileID_codec);
            break;
          }
          case 26:
          case 24: {
            mapTileOpFlags_.AddEntriesFrom(input, _repeated_mapTileOpFlags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapID = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            mapTileID_.AddEntriesFrom(ref input, _repeated_mapTileID_codec);
            break;
          }
          case 26:
          case 24: {
            mapTileOpFlags_.AddEntriesFrom(ref input, _repeated_mapTileOpFlags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RequestMapTileOperation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum MapTileOperationFlags {
        [pbr::OriginalName("RELOAD_TERRAIN")] ReloadTerrain = 1,
        [pbr::OriginalName("RELOAD_TEXTURE")] ReloadTexture = 2,
        [pbr::OriginalName("RELOAD_OBJECTS")] ReloadObjects = 4,
        [pbr::OriginalName("RELOAD_LOD")] ReloadLod = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
